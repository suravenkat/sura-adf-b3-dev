{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sura-adf-b3-dev"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage2_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'AzureDataLakeStorage2'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"LS_AccessToken_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'LS_AccessToken'"
		},
		"ls_adlsServicePrincipal_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'ls_adlsServicePrincipal'"
		},
		"ls_azuresql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_azuresql'"
		},
		"ls_incrementalTargetSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_incrementalTargetSQL'"
		},
		"ls_scriptOutputAdls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_scriptOutputAdls'"
		},
		"ls_targetsql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_targetsql'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://suraadlsdev.dfs.core.windows.net/"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://suraadlsdev.dfs.core.windows.net/"
		},
		"AzureDataLakeStorage2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "100a7e00-c249-4c60-b1c3-70200fb7e3dc"
		},
		"AzureDataLakeStorage2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "77652f11-89cc-40c8-a73a-07a2f1dcb9c2"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1030-160509-3hk1jbj6"
		},
		"AzureDatabricks2Keyvault_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1030-160509-3hk1jbj6"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://surakeyvault.vault.azure.net/"
		},
		"LS_ADBManagedIdentity_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1030-160509-3hk1jbj6"
		},
		"LS_AccessToken_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1030-160509-3hk1jbj6"
		},
		"ls_adlsServicePrincipal_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://suraadlsdev.dfs.core.windows.net/"
		},
		"ls_adlsServicePrincipal_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "100a7e00-c249-4c60-b1c3-70200fb7e3dc"
		},
		"ls_adlsServicePrincipal_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "0d81d1b2-ad0d-49a2-94dd-249ab461c35e"
		},
		"ls_copy_csv_file_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://suraadlsdev.dfs.core.windows.net/"
		},
		"ls_sourceadls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://suraadlsdev.dfs.core.windows.net/"
		},
		"ls_sourcesqlUsingAKV_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "azuredevsql"
		},
		"ls_target_copy_csv_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://suraadlsdev.dfs.core.windows.net/"
		},
		"TumblingWindowTrigger_24hrs_properties_pipeline_parameters_startdate": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"TumblingWindowTrigger_24hrs_properties_pipeline_parameters_enddate": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"TumblingWindow_Trigger_properties_pipeline_parameters_startdate": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"TumblingWindow_Trigger_properties_pipeline_parameters_enddate": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"scheduleTrigger_properties_custom_fullLoad_parameters_tablelist": {
			"type": "array",
			"defaultValue": [
				{
					"tableName": "iplteams_last7",
					"tableSchemaName": "dbo",
					"WaterMark_Column": "last_updated"
				},
				{
					"tableName": "employees_last7",
					"tableSchemaName": "dbo",
					"WaterMark_Column": "last_updated"
				}
			]
		},
		"tumblingWindowTrigger_24Hours_properties_pipeline_parameters_startdate": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"tumblingWindowTrigger_24Hours_properties_pipeline_parameters_enddate": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Custom_Full_FirstLoad_ADF_ADB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AccessTokenNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.ADB_Notebook_Path",
								"type": "Expression"
							},
							"baseParameters": {
								"ingestionTables": {
									"value": "@string(pipeline().parameters.ingestionTables)",
									"type": "Expression"
								},
								"ADLS_Path_Prefix": {
									"value": "@pipeline().globalParameters.ADLS_Path_Prefix",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AccessToken",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_customLoadSqlSource",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_custom_full_first_adf_adb",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ingestionTables": {
						"type": "object",
						"defaultValue": {
							"ingestionTables": [
								{
									"sourceTableName": "employees_last7",
									"targetTableName": "hz_employees_last07",
									"Source_File_Name": "lz_employees_last07",
									"Source_File_Location": "/adb/lz_data/src_sys/asia/sales/",
									"Target_File_Location": "/adb/hz_data/src_sys/asia/sales/hz_employees_last07/",
									"Delete_File_Location": "/adb/hz_data/src_sys/asia/sales/hz_employees_last07/",
									"Source_File_Delimiter": "parquet",
									"Rejected_Record_Location": "/adb/working/sales/err/asia/err_employees_last07/",
									"Rejected_File_Location": "/adb/lz_data/src_sys/asia/sales/reject/hz_employees_last07/",
									"Encoding": "UTF-8",
									"Archive_File": "yes",
									"Source_File_Archive_Location": "/adb/lz_data/src_sys/asia/sales/archive/hz_employees_last07",
									"Load_Type_Code": "flush_n_fill",
									"zone": "asia",
									"country": "india",
									"businessDomain": "sales",
									"businessSubDomain": "sales_electronics_domain",
									"sourceSystemId": "2023",
									"sourceSystemName": "sales",
									"Job_Run_ID": "20231113121245641",
									"HZ_DB_Name": "dev_db",
									"watermark_column": "id",
									"Error_DB_Name": "dev_db",
									"Error_Data_Lake_object": "err_employees_last07",
									"tableColumns": [
										{
											"sourceColumnName": "id",
											"sourceDataType": "string",
											"targetColumnName": "id",
											"targetDataType": "int",
											"isKey": false
										},
										{
											"sourceColumnName": "name",
											"sourceDataType": "nvarchar",
											"targetColumnName": "name",
											"targetDataType": "string",
											"isKey": false
										},
										{
											"sourceColumnName": "dep",
											"sourceDataType": "nvarchar",
											"targetColumnName": "dep",
											"targetDataType": "string",
											"isKey": false
										},
										{
											"sourceColumnName": "last_updated",
											"sourceDataType": "datetime",
											"targetColumnName": "last_updated",
											"targetDataType": "timestamp",
											"isKey": false
										}
									],
									"targetTablePartition": []
								}
							]
						}
					},
					"ADB_Notebook_Path": {
						"type": "string",
						"defaultValue": "/Users/suravenkatb324@gmail.com/ADB_Ingestion_Data/adb_master_code_adb"
					},
					"Batch_Run_ID": {
						"type": "string",
						"defaultValue": "20231113121245641"
					},
					"Batch_Name": {
						"type": "string",
						"defaultValue": "employee"
					},
					"CURRENT_USER": {
						"type": "string",
						"defaultValue": "suravenkatb324@gmail.com"
					},
					"businessArea": {
						"type": "string",
						"defaultValue": "sales"
					},
					"Business_Sub_Domain": {
						"type": "string",
						"defaultValue": "sales_electronics_domain"
					},
					"projectName": {
						"type": "string",
						"defaultValue": "sales"
					},
					"country": {
						"type": "string",
						"defaultValue": "india"
					},
					"src_sys_name": {
						"type": "string",
						"defaultValue": "salesDatabase"
					},
					"src_sys_id": {
						"type": "string",
						"defaultValue": "2023"
					},
					"lz_root_path": {
						"type": "string",
						"defaultValue": "/adb/lz_data/src_sys/asia/sales/"
					},
					"tablelist": {
						"type": "array",
						"defaultValue": [
							{
								"tableName": "employees_last7",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							}
						]
					}
				},
				"folder": {
					"name": "ADB-Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AccessToken')]",
				"[concat(variables('factoryId'), '/datasets/ds_customLoadSqlSource')]",
				"[concat(variables('factoryId'), '/datasets/ds_custom_full_first_adf_adb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Custom_Last07_ADF_ADB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AccessTokenNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.ADB_Notebook_Path",
								"type": "Expression"
							},
							"baseParameters": {
								"ingestionTables": {
									"value": "@string(pipeline().parameters.ingestionTables)",
									"type": "Expression"
								},
								"ADLS_Path_Prefix": {
									"value": "@pipeline().globalParameters.ADLS_Path_Prefix",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AccessToken",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from ',  item().tableSchemaName, '.', item().tableName, ' WHERE ', item().WaterMark_Column, ' >= ''', formatDateTime(adddays(utcnow(), -7), 'yyyy-MM-dd'), '''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_customLoadSqlSource",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_last07_adf_adb",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ingestionTables": {
						"type": "object",
						"defaultValue": {
							"ingestionTables": [
								{
									"sourceTableName": "employees_last7",
									"targetTableName": "hz_employees_last07",
									"Source_File_Name": "lz_employees_last07",
									"Source_File_Location": "/adb/lz_data/src_sys/asia/sales/",
									"Target_File_Location": "/adb/hz_data/src_sys/asia/sales/hz_employees_last07/",
									"Delete_File_Location": "/adb/hz_data/src_sys/asia/sales/hz_employees_last07/",
									"Source_File_Delimiter": "parquet",
									"Rejected_Record_Location": "/adb/working/sales/err/asia/err_employees_last07/",
									"Rejected_File_Location": "/adb/lz_data/src_sys/asia/sales/reject/hz_employees_last07/",
									"Encoding": "UTF-8",
									"Archive_File": "yes",
									"Source_File_Archive_Location": "/adb/lz_data/src_sys/asia/sales/archive/hz_employees_last07",
									"Load_Type_Code": "last_07",
									"zone": "asia",
									"country": "india",
									"businessDomain": "sales",
									"businessSubDomain": "sales_electronics_domain",
									"sourceSystemId": "2023",
									"sourceSystemName": "sales",
									"Job_Run_ID": "20231113121245641",
									"HZ_DB_Name": "dev_db",
									"watermark_column": "last_updated",
									"Error_DB_Name": "dev_db",
									"Error_Data_Lake_object": "err_employees_last07",
									"tableColumns": [
										{
											"sourceColumnName": "id",
											"sourceDataType": "string",
											"targetColumnName": "id",
											"targetDataType": "int",
											"isKey": false
										},
										{
											"sourceColumnName": "name",
											"sourceDataType": "nvarchar",
											"targetColumnName": "name",
											"targetDataType": "string",
											"isKey": false
										},
										{
											"sourceColumnName": "dep",
											"sourceDataType": "nvarchar",
											"targetColumnName": "dep",
											"targetDataType": "string",
											"isKey": false
										},
										{
											"sourceColumnName": "last_updated",
											"sourceDataType": "datetime",
											"targetColumnName": "last_updated",
											"targetDataType": "timestamp",
											"isKey": false
										}
									],
									"targetTablePartition": []
								}
							]
						}
					},
					"ADB_Notebook_Path": {
						"type": "string",
						"defaultValue": "/Users/suravenkatb324@gmail.com/ADB_Ingestion_Data/adb_master_code_adb"
					},
					"Batch_Run_ID": {
						"type": "string",
						"defaultValue": "20231113121245641"
					},
					"Batch_Name": {
						"type": "string",
						"defaultValue": "employee"
					},
					"CURRENT_USER": {
						"type": "string",
						"defaultValue": "suravenkatb324@gmail.com"
					},
					"businessArea": {
						"type": "string",
						"defaultValue": "sales"
					},
					"Business_Sub_Domain": {
						"type": "string",
						"defaultValue": "sales_electronics_domain"
					},
					"projectName": {
						"type": "string",
						"defaultValue": "sales"
					},
					"country": {
						"type": "string",
						"defaultValue": "india"
					},
					"src_sys_name": {
						"type": "string",
						"defaultValue": "salesDatabase"
					},
					"src_sys_id": {
						"type": "string",
						"defaultValue": "2023"
					},
					"lz_root_path": {
						"type": "string",
						"defaultValue": "/adb/lz_data/src_sys/asia/sales/"
					},
					"tablelist": {
						"type": "array",
						"defaultValue": [
							{
								"tableName": "employees_last7",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							}
						]
					}
				},
				"folder": {
					"name": "ADB-Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AccessToken')]",
				"[concat(variables('factoryId'), '/datasets/ds_customLoadSqlSource')]",
				"[concat(variables('factoryId'), '/datasets/ds_last07_adf_adb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_foreach_sql",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"Tablename": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_target_foreach_adls",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from INFORMATION_SCHEMA.TABLES",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-23T15:52:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azuresql')]",
				"[concat(variables('factoryId'), '/datasets/ds_foreach_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_target_foreach_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadata_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"structure"
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-23T15:14:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IfCondition')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.operation, 'Extraction')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Ingestion_Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "lookup_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Extraction_Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "copyfile",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"operation": {
						"type": "array",
						"defaultValue": [
							"Extraction",
							"Ingestion"
						]
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-30T15:22:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/lookup_csv')]",
				"[concat(variables('factoryId'), '/pipelines/copyfile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_ADF_ADB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AccessTokenNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.ADB_Notebook_Path",
								"type": "Expression"
							},
							"baseParameters": {
								"ingestionTables": {
									"value": "@string(pipeline().parameters.ingestionTables)",
									"type": "Expression"
								},
								"ADLS_Path_Prefix": {
									"value": "@pipeline().globalParameters.ADLS_Path_Prefix",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AccessToken",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Oldwatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select WatermarkValue from watermarktable where TableName='@{item().tableName}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_oldwatermark_lookup",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Newwatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select max(last_updated) as NewWatermarkvalue from @{item().tableName}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_Newwatermark_lookup",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Oldwatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Newwatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().tableName} where @{item().WaterMark_Column} >'@{formatDateTime(activity('Oldwatermark').output.firstRow.WatermarkValue, 'yyyy-MM-ddTHH:mm:ss')}' AND @{item().WaterMark_Column} <= '@{formatDateTime(activity('Newwatermark').output.firstRow.NewWatermarkvalue, 'yyyy-MM-ddTHH:mm:ss')}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_incrementalCopySource",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_incremental_adb",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"last_updated": {
												"value": {
													"value": "@activity('Newwatermark').output.firstRow.Newwatermarkvalue",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tableName": {
												"value": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_azuresql",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ingestionTables": {
						"type": "object",
						"defaultValue": {
							"ingestionTables": [
								{
									"sourceTableName": "salesitems_increm",
									"targetTableName": "hz_salesitems_increm",
									"Source_File_Name": "lz_salesitems_increm",
									"Source_File_Location": "/adb/lz_data/src_sys/asia/sales/",
									"Target_File_Location": "/adb/hz_data/src_sys/asia/sales/hz_salesitems_increm/",
									"Delete_File_Location": "/adb/hz_data/src_sys/asia/sales/hz_salesitems_increm/",
									"Source_File_Delimiter": "parquet",
									"Rejected_Record_Location": "/adb/working/sales/err/asia/err_salesitems_increm/",
									"Rejected_File_Location": "/adb/lz_data/src_sys/asia/sales/reject/hz_salesitems_increm/",
									"Encoding": "UTF-8",
									"Archive_File": "yes",
									"Source_File_Archive_Location": "/adb/lz_data/src_sys/asia/sales/archive/hz_salesitems_increm",
									"Load_Type_Code": "incremental",
									"zone": "asia",
									"country": "india",
									"businessDomain": "sales",
									"businessSubDomain": "sales_electronics_domain",
									"sourceSystemId": "2023",
									"sourceSystemName": "sales",
									"Job_Run_ID": "20231113121245641",
									"HZ_DB_Name": "dev_db",
									"watermark_column": "last_updated",
									"Error_DB_Name": "dev_db",
									"Error_Data_Lake_object": "err_salesitems_increm",
									"tableColumns": [
										{
											"sourceColumnName": "id",
											"sourceDataType": "int",
											"targetColumnName": "id",
											"targetDataType": "int",
											"isKey": false
										},
										{
											"sourceColumnName": "item",
											"sourceDataType": "nvarchar",
											"targetColumnName": "item",
											"targetDataType": "string",
											"isKey": false
										},
										{
											"sourceColumnName": "salesman",
											"sourceDataType": "nvarchar",
											"targetColumnName": "salesman",
											"targetDataType": "string",
											"isKey": false
										},
										{
											"sourceColumnName": "location",
											"sourceDataType": "nvarchar",
											"targetColumnName": "location",
											"targetDataType": "string",
											"isKey": false
										},
										{
											"sourceColumnName": "solditems",
											"sourceDataType": "int",
											"targetColumnName": "solditems",
											"targetDataType": "int",
											"isKey": false
										},
										{
											"sourceColumnName": "last_updated",
											"sourceDataType": "datetime",
											"targetColumnName": "last_updated",
											"targetDataType": "timestamp",
											"isKey": false
										}
									],
									"targetTablePartition": []
								}
							]
						}
					},
					"ADB_Notebook_Path": {
						"type": "string",
						"defaultValue": "/Users/suravenkatb324@gmail.com/ADB_Ingestion_Data/adb_master_code_adb"
					},
					"Batch_Run_ID": {
						"type": "string",
						"defaultValue": "20231113121245641"
					},
					"Batch_Name": {
						"type": "string",
						"defaultValue": "employee"
					},
					"CURRENT_USER": {
						"type": "string",
						"defaultValue": "suravenkatb324@gmail.com"
					},
					"businessArea": {
						"type": "string",
						"defaultValue": "sales"
					},
					"Business_Sub_Domain": {
						"type": "string",
						"defaultValue": "sales_electronics_domain"
					},
					"projectName": {
						"type": "string",
						"defaultValue": "sales"
					},
					"country": {
						"type": "string",
						"defaultValue": "india"
					},
					"src_sys_name": {
						"type": "string",
						"defaultValue": "salesDatabase"
					},
					"src_sys_id": {
						"type": "string",
						"defaultValue": "2023"
					},
					"lz_root_path": {
						"type": "string",
						"defaultValue": "/adb/lz_data/src_sys/asia/sales/"
					},
					"tablelist": {
						"type": "array",
						"defaultValue": [
							{
								"tableName": "salesitems_increm",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							}
						]
					}
				},
				"folder": {
					"name": "ADB-Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AccessToken')]",
				"[concat(variables('factoryId'), '/datasets/ds_oldwatermark_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_Newwatermark_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_incrementalCopySource')]",
				"[concat(variables('factoryId'), '/datasets/ds_incremental_adb')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Extraction_Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Extraction_Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copyfile",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Ingestion_Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "lookup_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-30T15:26:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copyfile')]",
				"[concat(variables('factoryId'), '/pipelines/lookup_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SetVariable_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_getMeta_for_setvariable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Childitemslist",
							"value": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Childitemslist')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_storemetadata2]",
										"storedProcedureParameters": {
											"exist": {
												"value": {
													"value": "@activity('Get Metadata1').output.exists",
													"type": "Expression"
												},
												"type": "String"
											},
											"name": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"type": {
												"value": {
													"value": "@item().type",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_azuresql",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Childitemslist": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-28T16:13:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_getMeta_for_setvariable')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Switch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.inputdata",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "employeesdata",
									"activities": [
										{
											"name": "employees",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"wildcardFolderPath": "source",
														"wildcardFileName": "*",
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sourceadls",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_targetadls",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								},
								{
									"value": "salesdata",
									"activities": [
										{
											"name": "salesdata",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sourceSQLforSwitch",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_targetadls",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "FInancialData",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "lookup",
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sourceADLSforSwitch",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_targetadlsforSwitch",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"inputdata": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-31T15:28:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourceADLSforSwitch')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetadlsforSwitch')]",
				"[concat(variables('factoryId'), '/datasets/ds_sourceadls')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetadls')]",
				"[concat(variables('factoryId'), '/datasets/ds_sourceSQLforSwitch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Switch_FailPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.inputdata",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "employeesdata",
									"activities": [
										{
											"name": "employees",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"wildcardFolderPath": "source",
														"wildcardFileName": "*",
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sourceadls",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_targetadls",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								},
								{
									"value": "salesdata",
									"activities": [
										{
											"name": "salesdata",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sourceSQLforSwitch",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_targetadls",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Invalid_Input",
										"errorCode": "101"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"inputdata": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-31T15:34:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourceadls')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetadls')]",
				"[concat(variables('factoryId'), '/datasets/ds_sourceSQLforSwitch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TumblingWindow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_for_sales_tumbling]",
								"storedProcedureParameters": {
									"enddate": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.enddate",
											"type": "Expression"
										}
									},
									"startdate": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.startdate",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_TumblingWindowSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_targetTumbling",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"startdate": {
						"type": "string"
					},
					"enddate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-11T16:22:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_TumblingWindowSource')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetTumbling')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Validation_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Extraction_Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Extraction_Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copyfile",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Ingestion_Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "lookup_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sourceadls",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:50",
							"sleep": 10,
							"childItems": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-30T15:40:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copyfile')]",
				"[concat(variables('factoryId'), '/pipelines/lookup_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WidgetsPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WidgetNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.NotebookPath",
								"type": "Expression"
							},
							"baseParameters": {
								"ADLS_Prefix": {
									"value": "@pipeline().globalParameters.ADLS_Prefix",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_KeyVaultADBAccessToken",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"NotebookPath": {
						"type": "string",
						"defaultValue": "/Users/suravenkatb324@gmail.com/DeltaLake/ADFNotebook"
					}
				},
				"folder": {
					"name": "ADB-Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVaultADBAccessToken')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adbAccessToken')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AccessTokenNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.ADB_Notebook_Path",
								"type": "Expression"
							},
							"baseParameters": {
								"ingestionTables": {
									"value": "@string(pipeline().parameters.ingestionTables)",
									"type": "Expression"
								},
								"ADLS_Path_Prefix": {
									"value": "@pipeline().globalParameters.ADLS_Path_Prefix",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AccessToken",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ADBCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1ADB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ingestionTables": {
						"type": "object",
						"defaultValue": {
							"ingestionTables": [
								{
									"sourceTableName": "salesemployee",
									"targetTableName": "hz_salesemployee",
									"Source_File_Name": "lz_salesemployee",
									"Source_File_Location": "/adb/lz_data/src_sys/asia/sales/",
									"Target_File_Location": "/adb/hz_data/src_sys/asia/sales/hz_salesemployee/",
									"Delete_File_Location": "/adb/hz_data/src_sys/asia/sales/hz_salesemployee/",
									"Source_File_Delimiter": "parquet",
									"Rejected_Record_Location": "/adb/working/sales/err/asia/err_salesemployee/",
									"Rejected_File_Location": "/adb/lz_data/src_sys/asia/sales/reject/hz_salesemployee/",
									"Encoding": "UTF-8",
									"Archive_File": "yes",
									"Source_File_Archive_Location": "/adb/lz_data/src_sys/asia/sales/archive/hz_salesemployee",
									"Load_Type_Code": "flush_n_fill",
									"zone": "asia",
									"country": "asia",
									"businessDomain": "sales",
									"businessSubDomain": "sales_electronics_domain",
									"sourceSystemId": "",
									"sourceSystemName": "sales",
									"Job_Run_ID": "20231113121245641",
									"HZ_DB_Name": "dev_db",
									"watermark_column": "id",
									"Error_DB_Name": "dev_db",
									"Error_Data_Lake_object": "err_salesemployee",
									"tableColumns": [
										{
											"sourceColumnName": "id",
											"sourceDataType": "string",
											"targetColumnName": "id",
											"targetDataType": "int",
											"isKey": false
										},
										{
											"sourceColumnName": "name",
											"sourceDataType": "string",
											"targetColumnName": "name",
											"targetDataType": "string",
											"isKey": false
										},
										{
											"sourceColumnName": "salary",
											"sourceDataType": "string",
											"targetColumnName": "salary",
											"targetDataType": "double",
											"isKey": false
										},
										{
											"sourceColumnName": "age",
											"sourceDataType": "string",
											"targetColumnName": "age",
											"targetDataType": "int",
											"isKey": false
										},
										{
											"sourceColumnName": "company",
											"sourceDataType": "string",
											"targetColumnName": "company",
											"targetDataType": "string",
											"isKey": false
										}
									],
									"targetTablePartition": []
								}
							]
						}
					},
					"ADB_Notebook_Path": {
						"type": "string",
						"defaultValue": "/Users/suravenkatb324@gmail.com/ADB_Ingestion_Data/adb_master_code_adb"
					},
					"Batch_Run_ID": {
						"type": "string",
						"defaultValue": "20231113121245641"
					},
					"Batch_Name": {
						"type": "string",
						"defaultValue": "employee"
					},
					"CURRENT_USER": {
						"type": "string",
						"defaultValue": "suravenkatb324@gmail.com"
					},
					"businessArea": {
						"type": "string",
						"defaultValue": "sales"
					},
					"Business_Sub_Domain": {
						"type": "string",
						"defaultValue": "sales_electronics_domain"
					},
					"projectName": {
						"type": "string",
						"defaultValue": "sales"
					},
					"country": {
						"type": "string",
						"defaultValue": "india"
					},
					"src_sys_name": {
						"type": "string",
						"defaultValue": "salesDatabase"
					},
					"src_sys_id": {
						"type": "string",
						"defaultValue": "2023"
					},
					"lz_root_path": {
						"type": "string",
						"defaultValue": "/adb/lz_data/src_sys/asia/sales/"
					}
				},
				"folder": {
					"name": "ADB-Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AccessToken')]",
				"[concat(variables('factoryId'), '/datasets/ADBCsv')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1ADB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/append_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sourceforAppendVariable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "source",
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_copySourceForAppendVatiable",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_copyTargetForAppendVariable",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename_append",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Append variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filescopied_list",
										"value": {
											"value": "@variables('filename_append')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filename_append": {
						"type": "Array"
					},
					"filescopied_list": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T15:56:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourceforAppendVariable')]",
				"[concat(variables('factoryId'), '/datasets/ds_copySourceForAppendVatiable')]",
				"[concat(variables('factoryId'), '/datasets/ds_copyTargetForAppendVariable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cicd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copySalesTableforUntil')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sourcesqlforUntil",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_targetadls",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-01T15:52:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourcesqlforUntil')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_SQL_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_targetadls",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-22T16:18:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azuresql')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copycsvadb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ADBCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1ADB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADB-Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADBCsv')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1ADB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copycsvfile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_copy_csvfile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_copy_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_copy_csvfile')]",
				"[concat(variables('factoryId'), '/datasets/ds_target_copy_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyfile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "source",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sourceadls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_targetadls",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-22T15:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourceadls')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/custom_fullLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_customLoadSqlSource",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_CustomLoadTargetSQL",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tablelist": {
						"type": "array",
						"defaultValue": [
							{
								"tableName": "iplteams_last7",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							},
							{
								"tableName": "employees_last7",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							}
						]
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-08T16:04:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_customLoadSqlSource')]",
				"[concat(variables('factoryId'), '/datasets/ds_CustomLoadTargetSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/custom_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from ',  item().tableSchemaName, '.', item().tableName, ' WHERE ', item().WaterMark_Column, ' >= ''', formatDateTime(adddays(utcnow(), -7), 'yyyy-MM-dd'), '''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{concat('delete  from ', item().tableSchemaName, '.', item().tableName, ' WHERE ', item().WaterMark_Column, ' >= ''', formatDateTime(adddays(utcnow(), -7), 'yyyy-MM-dd'), '''')}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_customLoadSqlSource",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_CustomLoadTargetSQL",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tablelist": {
						"type": "array",
						"defaultValue": [
							{
								"tableName": "iplteams_last7",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							},
							{
								"tableName": "employees_last7",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							}
						]
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-08T16:04:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_customLoadSqlSource')]",
				"[concat(variables('factoryId'), '/datasets/ds_CustomLoadTargetSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delete_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_sourceDeleteOnly",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ls_sourceadls",
												"type": "LinkedServiceReference"
											},
											"path": "sourcecontainer/LogInfo"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sourceCopyForDelete",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_targetCopyForDelete",
											"type": "DatasetReference",
											"parameters": {
												"TargetFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sourceGetmetaForDelete",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.csv')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-30T16:05:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourceGetmetaForDelete')]",
				"[concat(variables('factoryId'), '/datasets/ds_sourceDeleteOnly')]",
				"[concat(variables('factoryId'), '/datasets/ds_sourceCopyForDelete')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetCopyForDelete')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/filter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_Getmeta_for_Filter",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_copy_for_filter",
											"type": "DatasetReference",
											"parameters": {
												"SourceFilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_copy_for_filter_target",
											"type": "DatasetReference",
											"parameters": {
												"TargetFilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-28T15:36:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Getmeta_for_Filter')]",
				"[concat(variables('factoryId'), '/datasets/ds_copy_for_filter')]",
				"[concat(variables('factoryId'), '/datasets/ds_copy_for_filter_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Oldwatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select WatermarkValue from watermarktable where TableName='@{item().tableName}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_oldwatermark_lookup",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Newwatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select max(last_updated) as NewWatermarkvalue from @{item().tableName}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_Newwatermark_lookup",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Oldwatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Newwatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().tableName} where @{item().WaterMark_Column} >'@{formatDateTime(activity('Oldwatermark').output.firstRow.WatermarkValue, 'yyyy-MM-ddTHH:mm:ss')}' AND @{item().WaterMark_Column} <= '@{formatDateTime(activity('Newwatermark').output.firstRow.NewWatermarkvalue, 'yyyy-MM-ddTHH:mm:ss')}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"id"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_incrementalCopySource",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_incrementalCopyTargetSQL",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"last_updated": {
												"value": {
													"value": "@activity('Newwatermark').output.firstRow.Newwatermarkvalue",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tableName": {
												"value": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_azuresql",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tablelist": {
						"type": "array",
						"defaultValue": [
							{
								"tableName": "iplteams",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							},
							{
								"tableName": "employees",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							},
							{
								"tableName": "salesitems",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							}
						]
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-08T15:43:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_oldwatermark_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_Newwatermark_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_incrementalCopySource')]",
				"[concat(variables('factoryId'), '/datasets/ds_incrementalCopyTargetSQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_pipeline_adb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Oldwatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select WatermarkValue from watermarktable where TableName='@{item().tableName}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_oldwatermark_lookup",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Newwatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select max(last_updated) as NewWatermarkvalue from @{item().tableName}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_Newwatermark_lookup",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Oldwatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Newwatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().tableName} where @{item().WaterMark_Column} >'@{formatDateTime(activity('Oldwatermark').output.firstRow.WatermarkValue, 'yyyy-MM-ddTHH:mm:ss')}' AND @{item().WaterMark_Column} <= '@{formatDateTime(activity('Newwatermark').output.firstRow.NewWatermarkvalue, 'yyyy-MM-ddTHH:mm:ss')}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_incrementalCopySource",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_incremental_adb",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"last_updated": {
												"value": {
													"value": "@activity('Newwatermark').output.firstRow.Newwatermarkvalue",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tableName": {
												"value": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_azuresql",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tablelist": {
						"type": "array",
						"defaultValue": [
							{
								"tableName": "salesitems_increm",
								"tableSchemaName": "dbo",
								"WaterMark_Column": "last_updated"
							}
						]
					}
				},
				"folder": {
					"name": "ADB-Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-08T15:43:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_oldwatermark_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_Newwatermark_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_incrementalCopySource')]",
				"[concat(variables('factoryId'), '/datasets/ds_incremental_adb')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_lookupadls_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-23T15:28:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_lookupadls_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from employee where employeeid=2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-23T15:28:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadata_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_getmetadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-23T15:14:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_getmetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tablelist",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sourceCopyMultiTableSQL",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": {
													"value": "@item().tableSchemaName",
													"type": "Expression"
												},
												"tableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_targetADLSMutliTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tablelist": {
						"type": "array",
						"defaultValue": [
							{
								"tableName": "sales",
								"tableSchemaName": "dbo"
							},
							{
								"tableName": "employee",
								"tableSchemaName": "dbo"
							},
							{
								"tableName": "metadataadf2",
								"tableSchemaName": "dbo"
							}
						]
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-01T15:30:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourceCopyMultiTableSQL')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetADLSMutliTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/script')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azuresql",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "PRINT 'start of the statement'\nselect * from sales\nPRINT 'End of the statement'"
								},
								{
									"parameters": [
										{
											"name": "PlayerName",
											"type": "String",
											"value": "Kohli",
											"direction": "Input"
										},
										{
											"name": "Team",
											"type": "String",
											"value": "RCB",
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": "select * from iplteams where name =@PlayerName AND team=@Team"
								},
								{
									"type": "NonQuery",
									"text": "create table scripttable(table_name varchar(50), table_status varchar(10))"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00",
							"logSettings": {
								"logDestination": "ExternalStore",
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "ls_scriptOutputAdls",
										"type": "LinkedServiceReference"
									},
									"path": "sourcecontainer/target"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-05T15:40:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_scriptOutputAdls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/setVariable_pipelineInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adfname",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "adfname",
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pipelinename",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "adfname",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelinename",
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "pipelinename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_storemetadata2]",
							"storedProcedureParameters": {
								"exist": {
									"value": null,
									"type": "String"
								},
								"name": {
									"value": {
										"value": "@variables('adfname')",
										"type": "Expression"
									},
									"type": "String"
								},
								"type": {
									"value": {
										"value": "@variables('pipelinename')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azuresql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"adfname": {
						"type": "String"
					},
					"pipelinename": {
						"type": "String"
					},
					"dummyvariable": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T15:24:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/until_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('status'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "select refreshed as status  from mastertable where table_name ='sales'",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_lookupForUntilSQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output.firstRow.status, 'Y')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "status",
													"value": "True"
												}
											}
										]
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 3
									}
								}
							],
							"timeout": "0.00:05:00"
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copySalesTableforUntil",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"status": {
						"type": "String",
						"defaultValue": "False"
					}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-01T15:52:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copySalesTableforUntil')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookupForUntilSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/waitfor_cicd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cicd",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "cicd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/webactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://dummy.restapiexample.com/api/v1/employees",
							"method": "GET",
							"headers": {},
							"body": {
								"name": "test",
								"salary": "123",
								"age": "23"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines_bkp"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-05T15:54:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADBCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employees.csv",
						"folderPath": "ListOfFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_TumblingWindowSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales_tumbling"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1ADB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "lz_salesemployee",
						"folderPath": "adb/lz_data/src_sys/asia/sales",
						"fileSystem": "sourcecontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_CustomLoadTargetSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_incrementalTargetSQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_incrementalTargetSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Getmeta_for_Filter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Newwatermark_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azuresql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copySourceForAppendVatiable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copyTargetForAppendVariable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "appendvariableTarget",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copy_csvfile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_copy_csv_file",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employees.csv",
						"folderPath": "ListOfFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_copy_csv_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copy_for_filter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceFilename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().SourceFilename",
							"type": "Expression"
						},
						"folderPath": "source",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copy_for_filter_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TargetFilename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().TargetFilename",
							"type": "Expression"
						},
						"folderPath": "target",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_customLoadSqlSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_custom_full_first_adf_adb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "lz_employees_last07",
						"folderPath": "adb/lz_data/src_sys/asia/sales",
						"fileSystem": "sourcecontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_foreach_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string"
					},
					"Tablename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_getMeta_for_setvariable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_getmetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_incrementalCopySource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableSchema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().TableSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_incrementalCopyTargetSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_incrementalTargetSQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableSchema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().TableSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_incrementalTargetSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_incremental_adb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "lz_salesitems_increm",
						"folderPath": "adb/lz_data/src_sys/asia/sales",
						"fileSystem": "sourcecontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_last07_adf_adb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "lz_employees_last07",
						"folderPath": "adb/lz_data/src_sys/asia/sales",
						"fileSystem": "sourcecontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookupForUntilSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "mastertable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookupadls_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employees_csv.csv",
						"folderPath": "lookup",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_oldwatermark_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourceADLSforSwitch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "lookup",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourceCopyForDelete')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "source_validation",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourceCopyMultiTableSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourceDeleteOnly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "source_validation",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourceGetmetaForDelete')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source_validation",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourceSQLforSwitch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "metadataadf2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourceadls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourceforAppendVariable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourcesqlforUntil')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_targetADLSMutliTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "multitable",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_targetCopyForDelete')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TargetFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().TargetFileName",
							"type": "Expression"
						},
						"folderPath": "target",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_targetTumbling')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_targetsql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales_tumbling"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_targetsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_copy_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_target_copy_csv",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "targetcsvfile",
						"folderPath": "target_csvfile",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_target_copy_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_foreach_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "target",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_targetadls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "target",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_targetadlsforSwitch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourceadls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_bkp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "switchtarget",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourceadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"tenant": "[parameters('AzureDataLakeStorage2_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataLakeStorage2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_servicePrincipalCredential')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3203931274762907.7.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2Keyvault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3203931274762907.7.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "adbtoken"
					},
					"existingClusterId": "[parameters('AzureDatabricks2Keyvault_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADBManagedIdentity')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3203931274762907.7.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/ccd0d4d6-cfeb-40ab-b9e4-b0a2b1c7b2d5/resourceGroups/sura-rg-pay/providers/Microsoft.Databricks/workspaces/sura-adbwks-dev",
					"existingClusterId": "[parameters('LS_ADBManagedIdentity_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AccessToken')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3203931274762907.7.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LS_AccessToken_accessToken')]"
					},
					"existingClusterId": "[parameters('LS_AccessToken_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVaultADBAccessToken')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3203931274762907.7.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "adbaccesstoken"
					},
					"newClusterNodeType": "Standard_DS3_V2",
					"newClusterNumOfWorker": "2:5",
					"newClusterSparkConf": {
						"spark.hadoop.javax.jdo.option.ConnectionDriverName": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
						"spark.hadoop.javax.jdo.option.ConnectionURL": "jdbc:mariadb://consolidated-eastusc3-prod-metastore-0.mysql.database.azure.com:3306/organization3203931274762907?useSSL=true&amp;enabledSslProtocolSuites=TLSv1,TLSv1.1,TLSv1.2&amp;serverSslCert=/databricks/common/mysql-ssl-ca-cert.crt</value>;",
						"spark.hadoop.fs.permissions.umask-mode": "007"
					},
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "Standard_DS3_V2",
					"clusterOption": "Autoscaling",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adlsServicePrincipal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adlsServicePrincipal_properties_typeProperties_url')]",
					"tenant": "[parameters('ls_adlsServicePrincipal_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('ls_adlsServicePrincipal_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('ls_adlsServicePrincipal_servicePrincipalCredential')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azuresql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_azuresql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_copy_csv_file')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_copy_csv_file_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_incrementalTargetSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_incrementalTargetSQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_scriptOutputAdls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_scriptOutputAdls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sourceadls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_sourceadls_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sourcesqlUsingAKV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_sourcesqlUsingAKV_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_target_copy_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_target_copy_csv_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_targetsql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_targetsql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TumblingWindowTrigger_24hrs')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TumblingWindow",
						"type": "PipelineReference"
					},
					"parameters": {
						"startdate": "[parameters('TumblingWindowTrigger_24hrs_properties_pipeline_parameters_startdate')]",
						"enddate": "[parameters('TumblingWindowTrigger_24hrs_properties_pipeline_parameters_enddate')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-06-30T15:57:00Z",
					"endTime": "2023-07-08T15:57:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TumblingWindow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TumblingWindow_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TumblingWindow",
						"type": "PipelineReference"
					},
					"parameters": {
						"startdate": "[parameters('TumblingWindow_Trigger_properties_pipeline_parameters_startdate')]",
						"enddate": "[parameters('TumblingWindow_Trigger_properties_pipeline_parameters_enddate')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-06-30T15:51:00Z",
					"endTime": "2023-07-08T15:51:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TumblingWindow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/scheduleTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "scheduleTrigger",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "custom_fullLoad",
							"type": "PipelineReference"
						},
						"parameters": {
							"tablelist": "[parameters('scheduleTrigger_properties_custom_fullLoad_parameters_tablelist')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2023-09-11T20:50:00",
						"endTime": "2023-09-13T15:15:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/custom_fullLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumblingWindowTrigger_24Hours')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TumblingWindow",
						"type": "PipelineReference"
					},
					"parameters": {
						"startdate": "[parameters('tumblingWindowTrigger_24Hours_properties_pipeline_parameters_startdate')]",
						"enddate": "[parameters('tumblingWindowTrigger_24Hours_properties_pipeline_parameters_enddate')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-06-30T16:00:00Z",
					"endTime": "2023-07-08T16:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TumblingWindow')]"
			]
		}
	]
}